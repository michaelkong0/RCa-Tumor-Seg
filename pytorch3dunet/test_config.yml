model_path: C:\Users\theev\OneDrive\Documents\LAB\Code\3DUNetTest\Checkpoint\last_checkpoint.pytorch
model:
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: crg
  # initial number of feature maps
  f_maps: 32
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: True
  is_segmentation: true
predictor:
  name: 'StandardPredictor'
loaders:
  # save predictions to output_dir
  output_dir: C:\Users\theev\OneDrive\Documents\LAB\Code\3DUNetTest\output
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # how many subprocesses to use for data loading
  num_workers: 8
  # test loaders configuration
  test:
    file_paths:
      - C:\Users\theev\OneDrive\Documents\LAB\Code\3DUNetTest\test.h5

    slice_builder:
      name: SliceBuilder
      patch_shape: [24, 120, 120]
      # train stride between patches
      stride_shape: [12, 60, 60]

    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true
